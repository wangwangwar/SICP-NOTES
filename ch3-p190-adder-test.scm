#!/usr/bin/env guile
!#
(load "ch3-p190-adder.scm")
(load "ch3-p192-wire.scm")
(load "ch3-p194-wire-probe-test.scm")
(load "basic.scm")

(print "------------ TEST half-adder -------------------")
(define a (make-wire))
(define b (make-wire))
(define s (make-wire))
(define c (make-wire))

(print "time\t wire\t value")
(probe 'a a)
(probe 'b b)
(probe 's s)
(probe 'c c)

(half-adder a b s c)
(set-signal! a 1)
(set-signal! b 1)
(propagate)
(print "------------ END  half-adder -------------------")

(print "------------ TEST full-adder -------------------")
(define a (make-wire))
(define b (make-wire))
(define c-in (make-wire))
(define sum (make-wire))
(define c-out (make-wire))

(print "time\twire\tvalue")
(probe 'a a)
(probe 'b b)
(probe 'c-in c-in)
(probe 'sum sum)
(probe 'c-out c-out)

(full-adder a b c-in sum c-out)
(set-signal! a 1)
(set-signal! b 1)
(propagate)
(print "------------ END  full-adder -------------------")

(print "------------ TEST ripple-carry-adder -----------")
(define a1 (make-wire))
(define a2 (make-wire))
(define a3 (make-wire))
(define a4 (make-wire))
(define list-A (list a1 a2 a3 a4))

(define b1 (make-wire))
(define b2 (make-wire))
(define b3 (make-wire))
(define b4 (make-wire))
(define list-B (list b1 b2 b3 b4))

(define s1 (make-wire))
(define s2 (make-wire))
(define s3 (make-wire))
(define s4 (make-wire))
(define list-S (list s1 s2 s3 s4))

(define C (make-wire))

(print "time\twire\t value")
(probe 'a1 a1)
(probe 'a2 a2)
(probe 'a3 a3)
(probe 'a4 a4)
(probe 'b1 b1)
(probe 'b2 b2)
(probe 'b3 b3)
(probe 'b4 b4)
(probe 's1 s1)
(probe 's2 s2)
(probe 's3 s3)
(probe 's4 s4)
(probe 'C C)
(ripple-carry-adder-2 list-A list-B list-S C)
(print "--- a(1010) + b(1101) = s(10111) ---")
(set-signal! a1 1)
(set-signal! a3 1)
(set-signal! b1 1)
(set-signal! b2 1)
(set-signal! b4 1)
(propagate)
(print "------------ END  ripple-carry-adder -----------")
